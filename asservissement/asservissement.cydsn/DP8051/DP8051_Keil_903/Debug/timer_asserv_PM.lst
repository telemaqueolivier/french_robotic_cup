C51 COMPILER V9.03   TIMER_ASSERV_PM                                                       05/13/2012 22:25:54 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE TIMER_ASSERV_PM
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\timer_asserv_PM.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.0\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\timer_asserv_PM.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\timer_asserv_PM.lst)
                    - CD DB NOIP OT(2,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\timer_asserv_PM.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: timer_asserv_PM.c  
   3          * Version 2.0
   4          *
   5          *  Description:
   6          *     This file provides the power management source code to API for the
   7          *     Timer.  
   8          *
   9          *   Note:
  10          *     None
  11          *
  12          *******************************************************************************
  13          * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          ********************************************************************************/
  18          
  19          #include "timer_asserv.h"
  20          static timer_asserv_backupStruct timer_asserv_backup;
  21          
  22          /*******************************************************************************
  23          * Function Name: timer_asserv_SaveConfig
  24          ********************************************************************************
  25          *
  26          * Summary:
  27          *     Save the current user configuration
  28          *
  29          * Parameters:  
  30          *  void  
  31          *
  32          * Return: 
  33          *  void
  34          *
  35          * Global variables:
  36          *  timer_asserv_backup:  Variables of this global structure are modified to 
  37          *  store the values of non retention configuration registers when Sleep() API is 
  38          *  called.
  39          *
  40          * Reentrant:
  41          *    No
  42          *
  43          *******************************************************************************/
  44          void timer_asserv_SaveConfig(void)
  45          {   
  46   1          #if (!timer_asserv_UsingFixedFunction)
  47   1              /* Backup the UDB non-rentention registers for PSoC3 ES2 and PSoC5 ES1*/
  48   1              #if (timer_asserv_PSOC3_ES2 || timer_asserv_PSOC5_ES1)
                          timer_asserv_backup.TimerUdb = timer_asserv_ReadCounter();
                          timer_asserv_backup.TimerPeriod = timer_asserv_ReadPeriod();
                          timer_asserv_backup.InterruptMaskValue = timer_asserv_STATUS_MASK;
                          #if (timer_asserv_UsingHWCaptureCounter)
                              timer_asserv_backup.TimerCaptureCounter = timer_asserv_ReadCaptureCount();        
C51 COMPILER V9.03   TIMER_ASSERV_PM                                                       05/13/2012 22:25:54 PAGE 2   

                          #endif
                      #endif
  56   1              
  57   1              #if (timer_asserv_PSOC3_ES3 || timer_asserv_PSOC5_ES2)
  58   1                  timer_asserv_backup.TimerUdb = timer_asserv_ReadCounter();
  59   1                  timer_asserv_backup.InterruptMaskValue = timer_asserv_STATUS_MASK;
  60   1                  #if (timer_asserv_UsingHWCaptureCounter)
                              timer_asserv_backup.TimerCaptureCounter = timer_asserv_ReadCaptureCount();        
                          #endif
  63   1              #endif
  64   1              
  65   1              #if(!timer_asserv_ControlRegRemoved)
  66   1                  timer_asserv_backup.TimerControlRegister = timer_asserv_ReadControlRegister();
  67   1              #endif
  68   1          #endif
  69   1      }
  70          
  71          /*******************************************************************************
  72          * Function Name: timer_asserv_RestoreConfig
  73          ********************************************************************************
  74          *
  75          * Summary:
  76          *  Restores the current user configuration.
  77          *
  78          * Parameters:  
  79          *  void
  80          *
  81          * Return: 
  82          *  void
  83          *
  84          * Global variables:
  85          *  timer_asserv_backup:  Variables of this global structure are used to restore 
  86          *  the values of non retention registers on wakeup from sleep mode.
  87          *
  88          * Reentrant:
  89          *    Yes
  90          *
  91          *******************************************************************************/
  92          void timer_asserv_RestoreConfig(void) 
  93          {
  94   1          #if (!timer_asserv_UsingFixedFunction)
  95   1              /* Backup the UDB non-rentention registers for PSoC3 ES2 and PSoC5 ES1*/
  96   1              #if (timer_asserv_PSOC3_ES2 || timer_asserv_PSOC5_ES1)
                          timer_asserv_WriteCounter(timer_asserv_backup.TimerUdb);
                          timer_asserv_WritePeriod(timer_asserv_backup.TimerPeriod);
                          timer_asserv_STATUS_MASK =timer_asserv_backup.InterruptMaskValue;
                          #if (timer_asserv_UsingHWCaptureCounter)
                              timer_asserv_SetCaptureCount(timer_asserv_backup.TimerCaptureCounter);        
                          #endif
                      #endif
 104   1              
 105   1              #if (timer_asserv_PSOC3_ES3 || timer_asserv_PSOC5_ES2)
 106   1                  timer_asserv_WriteCounter(timer_asserv_backup.TimerUdb);
 107   1                  timer_asserv_STATUS_MASK =timer_asserv_backup.InterruptMaskValue;
 108   1                  #if (timer_asserv_UsingHWCaptureCounter)
                              timer_asserv_SetCaptureCount(timer_asserv_backup.TimerCaptureCounter);           
                          #endif
 111   1              #endif
 112   1              
 113   1              #if(!timer_asserv_ControlRegRemoved)
 114   1                  timer_asserv_WriteControlRegister(timer_asserv_backup.TimerControlRegister);
 115   1              #endif
C51 COMPILER V9.03   TIMER_ASSERV_PM                                                       05/13/2012 22:25:54 PAGE 3   

 116   1          #endif
 117   1      }
 118          
 119          
 120          /*******************************************************************************
 121          * Function Name: timer_asserv_Sleep
 122          ********************************************************************************
 123          *
 124          * Summary:
 125          *     Stop and Save the user configuration
 126          *
 127          * Parameters:  
 128          *  void
 129          *
 130          * Return: 
 131          *  void
 132          *
 133          * Global variables:
 134          *  timer_asserv_backup.TimerEnableState:  Is modified depending on the enable state
 135          *  of the block before entering sleep mode.
 136          *
 137          * Reentrant:
 138          *    No
 139          *
 140          *******************************************************************************/
 141          void timer_asserv_Sleep(void)
 142          {
 143   1          #if(!timer_asserv_ControlRegRemoved)
 144   1              /* Save Counter's enable state */
 145   1              if(timer_asserv_CTRL_ENABLE == (timer_asserv_CONTROL & timer_asserv_CTRL_ENABLE))
 146   1              {
 147   2                  /* Timer is enabled */
 148   2                  timer_asserv_backup.TimerEnableState = 1u;
 149   2              }
 150   1              else
 151   1              {
 152   2                  /* Timer is disabled */
 153   2                  timer_asserv_backup.TimerEnableState = 0u;
 154   2              }
 155   1          #endif
 156   1          timer_asserv_Stop();
 157   1          timer_asserv_SaveConfig();
 158   1      }
 159          
 160          
 161          /*******************************************************************************
 162          * Function Name: timer_asserv_Wakeup
 163          ********************************************************************************
 164          *
 165          * Summary:
 166          *  Restores and enables the user configuration
 167          *  
 168          * Parameters:  
 169          *  void
 170          *
 171          * Return: 
 172          *  void
 173          *
 174          * Global variables:
 175          *  timer_asserv_backup.enableState:  Is used to restore the enable state of 
 176          *  block on wakeup from sleep mode.
 177          *
C51 COMPILER V9.03   TIMER_ASSERV_PM                                                       05/13/2012 22:25:54 PAGE 4   

 178          * Reentrant:
 179          *    Yes
 180          *
 181          *******************************************************************************/
 182          void timer_asserv_Wakeup(void) 
 183          {
 184   1          timer_asserv_RestoreConfig();
 185   1          #if(!timer_asserv_ControlRegRemoved)
 186   1              if(timer_asserv_backup.TimerEnableState == 1u)
 187   1              {     /* Enable Timer's operation */
 188   2                      timer_asserv_Enable();
 189   2              } /* Do nothing if Timer was disabled before */ 
 190   1          #endif
 191   1      }
 192          
 193          
 194          /* [] END OF FILE */
C51 COMPILER V9.03   TIMER_ASSERV_PM                                                       05/13/2012 22:25:54 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION timer_asserv_SaveConfig (BEGIN)
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 58
0000 120000      E     LCALL   timer_asserv_ReadCounter
0003 900000      R     MOV     DPTR,#timer_asserv_backup+01H
0006 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 59
0009 906482            MOV     DPTR,#06482H
000C E0                MOVX    A,@DPTR
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#timer_asserv_backup+05H
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 66
0013 120000      E     LCALL   timer_asserv_ReadControlRegister
0016 900000      R     MOV     DPTR,#timer_asserv_backup+06H
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 69
001B 22                RET     
             ; FUNCTION timer_asserv_SaveConfig (END)

             ; FUNCTION timer_asserv_RestoreConfig (BEGIN)
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 106
0000 900000      R     MOV     DPTR,#timer_asserv_backup+01H
0003 120000      E     LCALL   ?C?LLDXDATA
0006 120000      E     LCALL   _timer_asserv_WriteCounter
                                           ; SOURCE LINE # 107
0009 900000      R     MOV     DPTR,#timer_asserv_backup+05H
000C E0                MOVX    A,@DPTR
000D FF                MOV     R7,A
000E 906482            MOV     DPTR,#06482H
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 114
0013 900000      R     MOV     DPTR,#timer_asserv_backup+06H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 120000      E     LCALL   _timer_asserv_WriteControlRegister
                                           ; SOURCE LINE # 117
001B 22                RET     
             ; FUNCTION timer_asserv_RestoreConfig (END)

             ; FUNCTION timer_asserv_Sleep (BEGIN)
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 145
0000 906574            MOV     DPTR,#06574H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5480              ANL     A,#080H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 6480              XRL     A,#080H
C51 COMPILER V9.03   TIMER_ASSERV_PM                                                       05/13/2012 22:25:54 PAGE 6   

000E 4E                ORL     A,R6
000F 7008              JNZ     ?C0003
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 148
0011 900000      R     MOV     DPTR,#timer_asserv_backup
0014 7401              MOV     A,#01H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 149
0017 8005              SJMP    ?C0004
0019         ?C0003:
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 153
0019 900000      R     MOV     DPTR,#timer_asserv_backup
001C E4                CLR     A
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 154
001E         ?C0004:
                                           ; SOURCE LINE # 156
001E 120000      E     LCALL   timer_asserv_Stop
                                           ; SOURCE LINE # 157
0021 120000      R     LCALL   timer_asserv_SaveConfig
                                           ; SOURCE LINE # 158
0024 22                RET     
             ; FUNCTION timer_asserv_Sleep (END)

             ; FUNCTION timer_asserv_Wakeup (BEGIN)
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
0000 120000      R     LCALL   timer_asserv_RestoreConfig
                                           ; SOURCE LINE # 186
0003 900000      R     MOV     DPTR,#timer_asserv_backup
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 EF                MOV     A,R7
0009 B40103            CJNE    A,#01H,?C0007
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
000C 120000      E     LCALL   timer_asserv_Enable
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 191
000F         ?C0007:
000F 22                RET     
             ; FUNCTION timer_asserv_Wakeup (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    109    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
